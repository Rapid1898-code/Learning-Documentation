//34 Git - Tutorial 1
// INIT, STATUS, ADD, COMMIT, LOG
sudo apt-get install git => Installation
git init => Repository erstellen in dem aktuellen Verzeichnis
git status => aktueller Status des GIT-Verzeichnises
git add NeuesFile => Datei zum Repository hinzuf?gen
git commit -m "addedFile" NeuesFile => Commit f?r neues File
git add *   => alle Dateien werden zum Repository hinzugef?gt
git add *.txt => alle Text-Dateien werden zum Repoistory hinzugef?gt
git commit -m "addedFile2" => in diesem File werden alle Files commited (wenn nicht angegeben wird)
git log => ?bersicht der letzten Vorg?nge bzw. Commits


//35 GitHub Remote Repositories
// REMOTE ADD, PUSH
git remote add origin https://github.com/link/Test.git  => Repositgory verkn?pfen
git push -u origin master   => Files auf GitHub hinaufladen


//36 Branches, Merges
//PULL, DIFF, RESET, BRANCH, CHECKOUT, MERGE
    git pull origin master  => File werden von GitHub aktualisiert (mit dem verkn?pften Repo lt. git remote Befehl siehe oben
    git add Textfile4    => Textfile4 hinzugef?gt zum Repo
    git diff HEAD   => Vergleich der Datei?nderungen
    git diff --staged   => neue Dokumente die ge?ndert, aber noch nicht commited wurden
    git reset Textfile4     => File wird wieder aus dem Textfile herausgenommen
    git commit -m "nachricht"   => Commit durchf?hren
//Neuer Branch wird erstellt
    git branch Neues_Feature    => Erstellung eines neuen Branch mit dem Namen "Neues_Feature"
    git checkout Neues-Feature  => Wechsel zum Branch "Neues_Feature"
    git remove File2    => L?schen der Datei
    git commit -m "remove all the junk"     => Commit der L?schung
    git checkout master => Wechel zum Master-Branch
    git merge Neues_Feature => Branch wird wieder mit dem Hauptzweig zusammengef?hrt
    git branch -d Neues_Feature => Branch wird wieder gel?scht
    git push    => ?nderungen wird hochladen auf github

