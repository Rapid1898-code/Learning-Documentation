from Morpheus YouTube Channel
and added from http://www.linuxcommand.org/

// 0 Important
NOMODESET: if there are starting problems when booting linux mint => replace quiet splash with nomodeset
Change Keyboard-Setting to DE: setxkbmap de
show $PATH variables: sed 's/:/\n/g' <<< "$PATH"
add entry to $PATH: export PATH="/home/bin:$PATH"       => /home/bin will be added

// 1 Installation //
//SUDO, APT-GET
Virtual Box donwloaden
Kali Linux Image downloaden
USB auf 1.1. ändern
Tastatur auf Deutsch Ändern (Deutsch hinzufügen - Englisch löschen)
Linux aktalisieren:
sudo => Superuserzugriff
- sudo apt-get update
- sudo apt-get upgrade
- sudo apg-get dist-upgrade

//6 Terminal - Dateien und Grundbefehle
//WD, LS, CD, TOUCH, CAT, CLEAR, MAN, HELP, MAN, READLINK
pwd => zeigt aktuelles Working Directory
ls --help => description of the command
man ls => outputs the manual for the command
ls => listet alle Ordner0 / Dateien des aktuellen Pfades
ls /bin => list the files in the /bin directory
ls /bin /etc => list the files in the /bin directory and the /etc directory
ls -a => auch versteckte Dateien werden angezeigt
ls -l => List the files in the working directory in ling format
ls -la .. => list all files in the parent of the working directory
(row1: file permissions - r read, w write, x exceute/auführen)
(row2: number of the files in the directory - 1 if it is a file)
(row3: Owner)
(row4: Group)
(row5: Size in bytes)
(row6: Modification time)
(row7: file name)
cd => cd . ist der aktuelle Ordner / cd .. ist immer der darüberliegende Ordner
readlink -e ./out.txt   => read full path for a file
touch myFirstFile => erstellen einer (leeren) Datei
cat myFirstFile => Ausgabe des Inhalts der Datei
Auführen einer Datei => ./Name
clear => löschen den Bildschirm
man => for Manual - zeigt Informatonen zu Linux-Befehlen
telnet => Userinterface für TELNET-Protocol

//6 Linux Filesystem
/boot: kernel and boot loader - the kernel is a file called vmlinuz
/etc: contains the configuation files - all files should be text files
/etc/passwd: contains essential infos for each users
/etc/fstab: table of devices that get mounted when the system boots
/etc/hosts: list the network host names that are known to the system
/bin: contain most of the programs - essential programs that the system requires to operate
/usr/bin: contain most of the programs - applications for the systems user
/sbin and /usr/sbin: contain programs for system admins - mostly for use by the superuser
/usr: variety of things that support user applications
/usr/share/X11: support for the x windows system
/usr/share/dict: dictionaries for the speling checker
/usr/share/doc: various docu files in different formats
/usr/share/man: the man pages are kept here
/usr/src: installed source code files
/usr/local: are used for installation of individual software from the user
/usr/local/bin: install folder for individual software
/var: files which are changing during system running
/var/log: many logfiles during the system run
/var/spool: queue for processes like mail or print jobs
/lib: shared libraries (like DDL in windows)
/home: place to keep personal work - users are only allowed to write files here
/root: superusers home directory
/tmp: directory in which programs can write their temporary files
/dev: special directory - contains devices that are available to the system - /dev/sda ist the first hard drive
/proc: special directory - it is entire virtual
/media: is used for mount points

//7 Rechte und Rechtverwaltung
//CHMOD
chmod => ändert Zugriffsrechte von Dateien und Ordnern
3-stellige Berechtigung read / write / execute
entsprechend 3-stellige Kürzel 111, 110, 100, usw.
111 => 7, 100 => 4, 101 => 5
chmod 751 datei => Root hat alle Rechte, akt. Benutzer read + execute, Sonstige nur execute
touch => ändert das Datum einer Datei


//8 Verzeichnisse
//MKDIR, RM, RMDIR, CP, MV
mkdir => Ordner erzeugen
g* => all files which begin with the char "g"
b*.txt => all files which begin with "b" and end with the char ".txt"
Data??? => files beginning with "Data" followed by exactly 3 more chars
[abc]* => files beginning with a/b/c
[[:upper:]]* => files beginning with uppercase letter
BACKUP.[[:digit:]][[:digit:]] => beginning with "BACKUP" followed by exactly 2 digits
*[![:lower:]] => files which does not end with a lowercase letter
rm file1 file2 => File löschen (longname remove) mit Sicherheitsabfrage
rm -i file1 file2 => User is prompoted before every deletion
rm -f => File löschen ohne Sicherheitsabfrage
rm -r Directory => Löschen eines Directory mit Sicherheitsabfrage
rm -rf => Löschen eines gesamten Directory mit Inhalt OHNE Sicherheitsabfrage
rmdir => löschen ein Directory
cp file1 file2 => <source> <destination> kopiert Files (longname copy) - without prompting when overwritten
cp -i file1 file2 => copying file - but user is prompted before overwriting an existing file
cp file1 dir1 => copy file1 inside of directory dir1
cp -r dir1 dir2 => copy the content of dir1 to dir2
    (if dir2 not exists => creating dir2 with dir1 content)
    (if dir2 exists => creating dir1 within dir2)
cp -r => um gesamtes Directory mit Inhalt zu kopieren)
mv file1 file2 => <source> <destination> verschiebt eine Datei (longname move)
mv -i file1 file2 => moving file but prompting when file2 exists
mv file1 file2 file3 dir1 => the 3 files are moved to dir1
mv dir1 dir2 =>


//9 Prozesse, System
//CRUNCH, STRG-C, PS, TYPE
crunch 1 9 1234567890abcdefghijklmnopqrstuv
=> checkt alls PW-Kombination - extrem langer Prozess
=> kann mit STRG-C abgebrochen werden
ps -e => welche Prozesse gerade laufen
kill nummer des Prozessesff
STRG-Z => pausieren eines Prozesses
bg => Prozess in den background versetzen
jobs => Check welche Jobs aktuell laufen
fg => Prozess in den Forground holen
type => displays the kind of command the shell will execute


//10 Filtern
//HEAD, TAIL, GREP
REP
head -n 3 txtfile => ersten 3 Zeilen der Datei werden ausgegeben
tail -n 3 txtfile => letzten 3 Zeilen werden ausgegeben
grep sea txtfile => alle Zeilen wo "sea" vorkommt werden ausgegeben
grep -i sea txtfile => Suche inkl. ignoriern von Upper- und Lowercase
grep -n sea txtfile => Zeilennummern werden zusätzlich ausgegeben
grep -r sea => gesamte Verzeichnis und Unterverzeichnisse werden durchsucht
//Regex Regular Expressions
grep -E s[ei][at] -wgre
. => für einzelnen Buchstaben;
[abc] => es wird nach einem Buchstaben gesucht der a, b oder c ist
-w => nur ganze Wörter (nicht nur Teile davon)
[^at] => verbotene Buchstaben - keine a oder t
\zahl => Suche nach einer Zahl - z.b. \7
s+ea => alles was vor "ea" 1 bis x "s" hat - z.B. sssea, sea, ssea
s*ea => alles was vor "ea" 0 bis x "s" hat - z.B. auch ea
s?ea => alles was vor "ea" 0 oder 1 "s" hat
s{2]ea => alls was 2 ss hat und danach ea => "ssea"


//11 Pipes
//Filterung der Ausgabe möglich
//Zeichen: |, >, >>
ps -e | grep panel  => gibt alle Prozesse bzw. filtert alle Prozesse die "panel" enthalten
ps -e | grep panel > searchpanels => gefilterte Prozesse werden in Datei umgeleitet
//wenn erneute etwas in searchpanels ausgegeben wird - erfolgt Überschreibung ohne Warnung
ps -e | grep terminal >> searchpanels => durch ">>" wird angehängt und nicht überschrieben
//Verschachtelung auch möglich:
ps -e | grep terminal | grep panel  => Filterung zuerst nach "terminal" und dann nach "panel"


//12 Installieren und Archive
//SHASUM, APT-GET, GIT CLONE, TAR CVF, TAR XVF
shasum filename => Checksumme des Files wird ausgegeben
diff => vergleicht den Inhalt zweiter Dateien
diff filname1 filename2  => Vergleich zweiter Dateien
apt-get install => zum insatllieren von Programmen / Paketen
git clone github-repository-link => GIT-Repository wird von GitHub gecloned1
tar cvf packfile filename1 filename2 filname3 => packen einer Datei (cv für create and verbose)
tar xvf packfile => entpacken der Datei (x für extract)


//13 Finden von Dateien
//FIND, WHEREIS, WHICH, LOCATE, WHOAMIf
find -name txtfile => sucht File und zeigt Speicherort an (auch Unterverzeichnisse)
whereis txtfile => sucht überall (nicht nur in den Unterverzeichnissen)
which ls => sucht die ausführbare Datei "ls" und zeigt an wo sie liegt
locate txtfile => gleich Funktion wie whereis (nur etwas schneller) - Files müssen aber indiziert sein
whoami => gibt auch welche Rechte der Nutzer hat (z.B. root oder kali)


//14 Links
//LN, Hard Link, Symbolic Link
ln abc.de abcde => Hardlink der Datei abc.de wird erzeugt
(wenn anschließend eine Datei geändert - ändert sich autoamtisch auch die andere Datei)
ln -s abc.de abcde => Symbolic Link der Datei abc.de wird erstellt
(ist wie eine Verknüpfung in Windows)


//15 Fun and Small Things
curl -4 http://wttr.in/Wien => Wetter der nächsten 3 Tage wird im Terminal angezeigt
telnet towel.blinkenlights.nl => Star Wars Episode 4 als ASCII Art
curl ftp://speedtest.tele2.net/1GB.zip -0 /dev/null => Speedtest mit 1GB Testfile
asciivview bild.jpg -driver curses => Ausgabe eines Bildes als Ascii-Art (vorher aview installieren mit apt-get install aview)


//20 Videos konvertieren, schneiden
//FFMPEG
Installaton: sudo apt-get install ffmpeg
Gesamte Dokumentation: ffmpeg --help
ffmpeg -i hacking.mkv -c copy -t 15 hackingNeu.mkv => kopieren in die neue Datei, aber nur die ersten 15 Sekunden
-i => Input-Datei
-c => Angabe des Codecs (z.B. libx264 auf Linux) (c für codec)
-c copy => bestehender Codec der Datei wird übernomen (keine Neuberechnung - z.B. beim Splitten)
-t 15 => Zugriff auf die Zeit - in diesem Fall 15 Sekunden
-ss => Angabe der Startzeit in der Form 00:00:00 (hh:mm:ss)
ffmpeg -i film.mkv -t 60 -c copy Teil1.mkv -ss 00:01:00 -c copy Teil2.kmv => Film wird gesplitet (ersten 60sek in Teil1 - Rest in Teil2)
ffmpeg -f concat -i list.txt -c copy output.mkv => zusammenfügen von allen Filmdateien die in der Datei list.txt angegeben sind
- vn => Audio wird ausgelesenm
ffmpeg -i film.mkv -vn -ab 256 output.mp3 => Audio wird extrahiert mit 256KB/s
-c:v copy => Kopieren des Videocodecs
-c:a aac => Audio wird in aac-Codec umgewandelt
ffmpeg -i film.mkv -i audio.mp3 -c:v copy -c:a aac -strict experimental output.mkv => Video- und Audiospur zusammenführen
ffmpeg -i film.mkv -vf scale=1000:-1 -t 5 -r 20 image.gif => Umwandlung einer Video-Datei in das GIF-Format


//21 Einstellung im Terminal
// Aufruf mit Sudo Visudo - Anpassung der ersten Zeile bei Defaults wo env_reset steht
pwfeedback => Passwort mit Sternchen sichtbar machen
insults => Lustige Ausgaben, Insults bei Falscheingabe des Sudo-Passworts


//22 Automatisches Herunterfahren
//SHUTDOWN
shutdown -h now => Linux wird sofort heruntergefahren
shutdown -h 23:59 => Linux fährt um 23:59 herunter
shutdown -r +765 => System rebootet in 765 Minuten
-h => normales Herunterfahren
-r => Reboot


//24 Grub Bootloader anpassen
//GRUB
sudo gedit grub => Aufruf der Datei ohne Schreibschutz
(wenn gedit noch nicht installiert => sudo apt-get install gedit)
info -f grub -n "Simple configuration" => Ausgabe einer Übersicht der Befehle
GRUB_DEFAULT=0  => Default Betriebssystem => bei 0 erstes Betriebssystem, bei 1 das zweite Betriebssytem
GRUB_TIMEOUT=5 => Auswahlzeitraum in Sekunden des Betriebssystems (mit Shift-Taste öffnet sich das Bootmenü immer)
GRUB_BACKGROUND="/home/Bilder/meinBild.png" => Hintergrund-Bild des Bootloaders festlegen
sudo update-grub => Nach den Änderungen muss dies im Terminal durchgeführt werden um die Datei zu speichern


//26 PDF Dateien vereinigen
//PDFUNITE
pdfunite file1.pdf file2.pdf ausgabe.pdf    => 2 PDFs werden zusammengeführt - für beliebig viele Dateien































